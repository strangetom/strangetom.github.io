"use strict";console.log("WORKER: executing.");var version="v5::",offlineFundamentals=["/","/index.html","/offline.html","/css/index.min.css","/css/offline.min.css","/js/fuse.min.js","/js/search.min.js","/img/Beef.svg","/img/Chicken.svg","/img/Dessert.svg","/img/Lamb.svg","/img/Pork.svg","/img/Seafood.svg","/img/Search.svg","/img/Turkey.svg","/img/Veggie.svg","/img/header.svg"];self.addEventListener("install",function(e){console.log("WORKER: install event in progress."),e.waitUntil(caches.open(version+"fundamentals").then(function(e){return e.addAll(offlineFundamentals)}).then(function(){console.log("WORKER: install completed")}))}),self.addEventListener("fetch",function(s){console.log("WORKER: fetch event in progress."),"GET"===s.request.method?s.respondWith(caches.match(s.request).then(function(e){var n=fetch(s.request).then(function(e){var n=e.clone();return console.log("WORKER: fetch response from network.",s.request.url),caches.open(version+"pages").then(function(e){e.put(s.request,n)}).then(function(){console.log("WORKER: fetch response stored in cache.",s.request.url)}),e},t).catch(t);return console.log("WORKER: fetch event",e?"(cached)":"(network)",s.request.url),e||n;function t(){return console.log("WORKER: fetch request failed in both cache and network."),caches.match("offline.html")}})):console.log("WORKER: fetch event ignored.",s.request.method,s.request.url)}),self.addEventListener("activate",function(e){console.log("WORKER: activate event in progress."),e.waitUntil(caches.keys().then(function(e){return Promise.all(e.filter(function(e){return!e.startsWith(version)}).map(function(e){return caches.delete(e)}))}).then(function(){console.log("WORKER: activate completed.")}))});