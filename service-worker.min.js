"use strict";console.log("WORKER: executing.");var version="v1::",offlineFundamentals=["/","/css/index.min.css","/js/fuse.min.js","/js/search.min.js","/js/search_data.min.js","/img/Beef_colour.svg","/img/Chicken_colour.svg","/img/Dessert_colour.svg","/img/Lamb_colour.svg","/img/Pork_colour.svg","/img/Seafood_colour.svg","/img/Search.svg","/img/Turkey_colour.svg","/img/Veggie_colour.svg"];self.addEventListener("install",function(e){console.log("WORKER: install event in progress."),e.waitUntil(caches.open(version+"fundamentals").then(function(e){return e.addAll(offlineFundamentals)}).then(function(){console.log("WORKER: install completed")}))}),self.addEventListener("fetch",function(o){console.log("WORKER: fetch event in progress."),"GET"===o.request.method?o.respondWith(caches.match(o.request).then(function(e){var n=fetch(o.request).then(function(e){var n=e.clone();return console.log("WORKER: fetch response from network.",o.request.url),caches.open(version+"pages").then(function(e){e.put(o.request,n)}).then(function(){console.log("WORKER: fetch response stored in cache.",o.request.url)}),e},t).catch(t);return console.log("WORKER: fetch event",e?"(cached)":"(network)",o.request.url),e||n;function t(){return console.log("WORKER: fetch request failed in both cache and network."),new Response("<h1>Service Unavailable</h1>",{status:503,statusText:"Service Unavailable",headers:new Headers({"Content-Type":"text/html"})})}})):console.log("WORKER: fetch event ignored.",o.request.method,o.request.url)}),self.addEventListener("activate",function(e){console.log("WORKER: activate event in progress."),e.waitUntil(caches.keys().then(function(e){return Promise.all(e.filter(function(e){return!e.startsWith(version)}).map(function(e){return caches.delete(e)}))}).then(function(){console.log("WORKER: activate completed.")}))});