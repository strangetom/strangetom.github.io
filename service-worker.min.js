"use strict";console.log("WORKER: executing.");var version="v11::",offlineFundamentals=["/","/offline.html","/css/index.min.css","/css/offline.min.css","/css/recipe.min.css","/js/fuse.basic.min.js","/js/scale.min.js","/js/search.min.js","/img/Beef.svg","/img/Chicken.svg","/img/Dessert.svg","/img/Lamb.svg","/img/Pork.svg","/img/Seafood.svg","/img/Search.svg","/img/Turkey.svg","/img/Veggie.svg","/img/header.svg","/img/header-txt.svg","/img/header-lrg.svg","/fonts/lmmonoproplt10-regular-webfont.woff"];self.addEventListener("install",(function(e){console.log("WORKER: install event in progress."),e.waitUntil(caches.open(version+"fundamentals").then((function(e){return e.addAll(offlineFundamentals)})).then((function(){console.log("WORKER: install completed")})))})),self.addEventListener("fetch",(function(e){console.log("WORKER: fetch event in progress."),"GET"===e.request.method?e.respondWith(caches.match(e.request).then((function(n){var t=fetch(e.request).then((function(n){var t=n.clone();return console.log("WORKER: fetch response from network.",e.request.url),caches.open(version+"pages").then((function(n){n.put(e.request,t)})).then((function(){console.log("WORKER: fetch response stored in cache.",e.request.url)})),n}),s).catch(s);return console.log("WORKER: fetch event",n?"(cached)":"(network)",e.request.url),n||t;function s(){return console.log("WORKER: fetch request failed in both cache and network."),caches.match("offline.html")}}))):console.log("WORKER: fetch event ignored.",e.request.method,e.request.url)})),self.addEventListener("activate",(function(e){console.log("WORKER: activate event in progress."),e.waitUntil(caches.keys().then((function(e){return Promise.all(e.filter((function(e){return!e.startsWith(version)})).map((function(e){return caches.delete(e)})))})).then((function(){console.log("WORKER: activate completed.")})))}));